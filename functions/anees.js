// functions/anees.js
exports.handler = async (event) => {
  try {
    const GEMINI_API_KEY = process.env.GEMINI_API_KEY;
    if (!GEMINI_API_KEY) return json({ ok:false, error:"Missing GEMINI_API_KEY" }, 500);

const body = safeJson(event.body);
const { 
  action = "explain", 
  subject = "ุงูููุฒูุงุก", 
  concept = "", 
  question = "", 
  preferred_formula = "" 
} = body || {};

const { url, payload } = buildCall(GEMINI_API_KEY, action, subject, concept, question, preferred_formula);

    // โ ุงุณุชุฎุฏุงู postWithRetry ุจุฏู fetch ุงููุจุงุดุฑ
    const j = await postWithRetry(url, payload).catch(err => {
      return { __http_error: String(err.message || err) };
    });
    if (j && j.__http_error) {
      return json({ ok:false, error: j.__http_error }, 429);
    }

    const raw = j?.candidates?.[0]?.content?.parts?.[0]?.text ?? "";

    let data =
      tryParse(raw) ||
      tryParse(extractJson(raw)) ||
      tryParse(sanitizeJson(extractJson(raw))) ||
      parseLooseJson(raw);

    if (!data) {
      const fixPayload = {
        contents: [{ role:"user", parts:[{ text:
`ุฃุตูุญู JSON ุงูุชุงูู ููููู ุตุงูุญูุง 100ูช ููุทุงุจู ุงููุฎุทุท ุงููุทููุจ.
ุฃุนูุฏู ุงููุงุฆู ููุท ุจูุง ุฃู ููุฏุงุช ุฃู ุดุฑุญ:

${raw}` }]}],
        generationConfig:{ temperature:0.2, response_mime_type:"application/json" }
      };

      const jj = await postWithRetry(url, fixPayload).catch(err => {
        return { __http_error: String(err.message || err) };
      });
      if (jj && jj.__http_error) {
        return json({ ok:false, error: jj.__http_error }, 429);
      }

      const raw2 = jj?.candidates?.[0]?.content?.parts?.[0]?.text ?? "";
      data =
        tryParse(raw2) ||
        tryParse(extractJson(raw2)) ||
        tryParse(sanitizeJson(extractJson(raw2))) ||
        parseLooseJson(raw2);
    }

if (!data) return json({ ok:false, error:"Bad JSON from model" }, 502);

// โจ ูุฑุถ ุงูุตูุบุฉ ุงููุฎุชุงุฑุฉ ูู ุฃูู formulas ุฅู ููุฌุฏุช
try {
  const pf = (preferred_formula ?? "").toString().trim();
  if (pf && Array.isArray(data.formulas)) {
    // ุงุญุฐูู ุฃู ุชูุฑุงุฑ (ุชุทุงุจู ูุตู ุจุนุฏ ุชุดุฐูุจ)
    data.formulas = data.formulas.filter(f => (f ?? "").toString().trim() !== pf);
    // ุถุนู ุงููุฎุชุงุฑุฉ ูู ุงูููุฏูุฉ
    data.formulas.unshift(pf);
  } else if (pf && !Array.isArray(data.formulas)) {
    data.formulas = [pf];
  }
} catch {}
    // โจ ูุนุงูุฌุฉ ุงูุฎุทูุงุช (ูุฒูู ุงูุชุฑููู 1. 2. ...) + ููุน \mathrm ูู ุงููุต ุงูุนุงุฏู
if (data.steps) {
  data.steps = data.steps.map(s => {
    s = (s ?? "").toString().replace(/^\s*\d+\.\s*/, '').trim();
    // ูู ููู \mathrm ุฎุงุฑุฌ $...$ุ ูููููุง ูููุง ุฏุงุฎู $
    const hasMath = /\$[^$]+\$/.test(s) || /\$\$[\s\S]+\$\$/.test(s);
    if (!hasMath && /\\mathrm\{[^}]+\}/.test(s)) {
      s = `$${s}$`;
    }
    return s;
  });
}

    // ูุนุงูุฌุฉ ุงูุฑููุฒ ูุงูุชุฑููู
// ูุนุงูุฌุฉ ุงูุฎุทูุงุช (ูุฒูู ุงูุชุฑููู 1. 2. ...)
if (data.steps) {
  data.steps = data.steps.map(s => (s ?? "").toString().replace(/^\s*\d+\.\s*/, '').trim());
}

// ุชุบููู ุงูุฑููุฒ ุจู $...$
const wrapSym = (sym) => {
  sym = (sym ?? '') + '';
  return sym && /^\$.*\$$/.test(sym) ? sym : (sym ? `$${sym}$` : sym);
};

if (data.symbols) {
  data.symbols = data.symbols.map(s => ({ ...s, symbol: wrapSym(s?.symbol) }));
}
if (data.givens) {
  data.givens = data.givens.map(g => ({ ...g, symbol: wrapSym(g?.symbol) }));
}
if (data.unknowns) {
  data.unknowns = data.unknowns.map(u => ({ ...u, symbol: wrapSym(u?.symbol) }));
}

// ๐ ููุน ุธููุฑ F=ma ุฅุฐุง ุงูููููู ููุณ "ูุงููู ูููุชู ุงูุซุงูู"
if (Array.isArray(data.formulas)) {
  const isNewton2 = /(ูููุช(?:ู)?\s*(ุงูุซุงูู|2)|newton(?:'s)?\s*second)/i.test(concept);
  if (!isNewton2) {
    data.formulas = data.formulas.filter(f => !/\bF\s*=\s*m\s*\*?\s*a\b/i.test(String(f || '')));
  }
}

// ุชุฑุชูุจ ุงูุฃุนุฏุงุฏ (ููุน 1e3 ุฅูุฎ)
tidyPayloadNumbers(data);

return json({ ok: true, data });
  } catch (e) {
    return json({ ok:false, error: e?.message || "Unexpected error" }, 500);
  }
}; // โ ูุฐุง ูููู exports.handler

/* ---------- Helpers ---------- */
function json(obj, status=200){
  return {
    statusCode: status,
    headers:{ "Content-Type":"application/json; charset=utf-8" },
    body: JSON.stringify(obj)
  };
}

// ๐ ููุง ุชุญุทูู safeJson ุงูุฌุฏูุฏุฉ
function safeJson(str){
  try { 
    return JSON.parse(str || '{}'); 
  } catch { 
    return {}; 
  }
}
  
function tryParse(s){ try{ return s && JSON.parse(s); }catch{ return null; } }
function extractJson(text){
  if (!text) return "";
  let t = (text+"")
    .replace(/\uFEFF/g,"")
    .replace(/[\u200E\u200F\u202A-\u202E]/g,"")
    .trim()
    .replace(/^```json/i,"```")
    .replace(/^```/,"")
    .replace(/```$/,"")
    .trim();
  const a = t.indexOf("{"), b = t.lastIndexOf("}");
  if (a>=0 && b>a) t = t.slice(a, b+1);
  return t;
}
function sanitizeJson(t){
  // ุชูุธูู ุนุงู + ุฅุตูุงุญุงุช ุดุงุฆุนุฉ
  return (t||"")
    .replace(/\uFEFF/g,"")
    .replace(/[\u200E\u200F\u202A-\u202E]/g,"")
    .replace(/^```json/i,"```")
    .replace(/^```/,"")
    .replace(/```$/,"")
    .replace(/[โโ]/g,'"')
    .replace(/[โโ]/g,"'")
    .replace(/'([A-Za-z\u0600-\u06FF_][\w\u0600-\u06FF_]*)'\s*:/g, '"$1":')
    .replace(/:\s*'([^'\\]*(?:\\.[^'\\]*)*)'/g, ':"$1"')
    .replace(/,\s*([}\]])/g,"$1")
    .replace(/:\s*undefined/g,": null")
    .replace(/\s+\n/g,"\n")
    .trim();
}

function parseLooseJson(s){
  if(!s) return null;
  let t = extractJson(s);
  if(!t) return null;
  t = sanitizeJson(t);
  t = t.replace(/([{,]\s*)([A-Za-z\u0600-\u06FF_][\w\u0600-\u06FF_]*)(\s*):/g, '$1"$2"$3:');
  try { return JSON.parse(t); } catch { return null; }
}

function sciToLatex(v){
  const s = (v??"")+"";
  const m = s.match(/^\s*([+-]?\d+(?:\.\d+)?)e([+-]?\d+)\s*$/i);
  if(!m) return s;
  const mant = m[1].replace(/^([+-]?)(\d+)\.0+$/,"$1$2");
  const exp = parseInt(m[2],10);
  return `$${mant}\\times10^{${exp}}$`;
}
function tidyPayloadNumbers(obj){
  const fix = (x)=> {
    if (typeof x === "number") return sciToLatex(x);
    if (/^\s*[+-]?\d+(\.\d+)?e[+-]?\d+\s*$/i.test((x||"")+"")) return sciToLatex(x);
    return x;
  };
  if (Array.isArray(obj.givens))   obj.givens   = obj.givens.map(g => ({ ...g, value: fix(g.value) }));
  if (Array.isArray(obj.unknowns)) obj.unknowns = obj.unknowns.map(u => ({ ...u }));
}

// ุฅุนุงุฏุฉ ุงููุญุงููุฉ ูุน backoff
async function postWithRetry(url, payload, { tries = 3, baseDelayMs = 800 } = {}) {
  let lastErr = null;
  for (let i = 0; i < tries; i++) {
    try {
      const r = await fetch(url, {
        method: "POST",
        headers: { "Content-Type":"application/json" },
        body: JSON.stringify(payload)
      });
      if (r.status === 429 || r.status === 503) {
        const t = await r.text().catch(()=> "");
        lastErr = new Error(`HTTP ${r.status} โ ${t.slice(0,200)}`);
      } else if (!r.ok) {
        const t = await r.text().catch(()=> "");
        throw new Error(`HTTP ${r.status} โ ${t.slice(0,200)}`);
      } else {
        return await r.json();
      }
    } catch (e) {
      lastErr = e;
    }
    const wait = baseDelayMs * Math.pow(2, i);
    await new Promise(res => setTimeout(res, wait));
  }
  throw lastErr || new Error("Request failed");
}

function buildCall(key, action, subject, concept, question, preferred_formula) {
  const baseUrl =
    `https://generativelanguage.googleapis.com/v1beta/models/` +
    `gemini-1.5-flash:generateContent?key=${key}`;

  // โจ normalize ุงูุตูุบุฉ ุงููุฎุชุงุฑุฉ ูู ุงููุณุชุฎุฏู
  preferred_formula = (preferred_formula ?? "").toString().trim();

  // ููุงุนุฏ ุนุงูุฉ ุซุงุจุชุฉ ููู ุงูุทูุจุงุช
  const RULES = `
- ุงูุชุจ **ุจุงูุนุฑุจูุฉ ุงููุตุญู ููุท** ูู ูู ุงูุญููู ุงููุตูุฉ (scenario/overview/steps/โฆ).
- ูููุน ุงุณุชุฎุฏุงู ุงูุฅูุฌููุฒูุฉ ุฎุงุฑุฌ LaTeX ูุทูููุงุ ุฅู ูุงู ุงูุณุคุงู ุฃู ุงููุตุทูุญุงุช ุฅูุฌููุฒูุฉ ูุชุฑุฌููุง ููุนุฑุจูุฉ.
- ุงููุนุงุฏูุงุช ุฏุงุฆููุง ุฏุงุฎู $...$ ุฃู $$...$$ ููุท.
- ุงููุญุฏุงุช ุฏุงุฎู LaTeX ูุจุตูุบุฉ \\mathrm{...} ูุซู: $9.8\\,\\mathrm{m/s^2}$.
- ูุง ุชุถุน ุฃู Markdown ุฃู \`\`\` ุฃู ุชุนูููุงุชุ **ุฃุนูุฏ JSON ุตุงูุญ ููุท**.
- ุงูููุงุชูุญ ุงููุณููุญุฉ ุญุณุจ ููุน ุงูุทูุจ ููุง ุบูุฑูุง.`;

  // ูุฎุทุทุงุช ุตุงุฑูุฉ ููุฒู ุจูุง ุงููููุฐุฌ
  // ...
  const EXPLAIN_SCHEMA = {
    title: "ุนููุงู ูุตูุฑ ุจุงูุนุฑุจูุฉ",
    overview: "ุชุนุฑูู ููุฌุฒ ูุงุถุญ ุจุงูุนุฑุจูุฉ",
    symbols: [ { desc:"ุงูููุฉ", symbol:"F", unit:"\\mathrm{N}" } ],
    formulas: [],
    steps: ["ุงุณุชุฎุฑุงุฌ ุงููุนุทูุงุช","ุงุฎุชูุงุฑ ุงููุงููู","ุงูุชุนููุถ ูุงูุญุณุงุจ"]
  };

  const EXAMPLE_SCHEMA = {
    scenario: "ูุต ูุณุฃูุฉ ุนุฑุจูุฉ ูุงุถุญุฉ",
    givens:   [ { symbol:"m", value:"5", unit:"\\mathrm{kg}", desc:"ุงููุชูุฉ" } ],
    unknowns: [ { symbol:"a", desc:"ุงูุชุณุงุฑุน" } ],
    formulas: [],
    steps:    ["ุฎุทูุงุช ุนุฑุจูุฉ ููุตูุฉ ูุน ุงูุชุนููุถ ุงูุนุฏุฏู ูู ูู ุฎุทูุฉ"],
    result:   "$$a = 2\\,\\mathrm{m/s^2}$$"
  };

  let temp = 0.25;
  let prompt = `ุฃูุช ุฎุจูุฑุฉ ${subject}. ${RULES}
ุงูููููู: ยซ${concept}ยป.`;

if (action === "explain") {
  prompt += `
ุฃุนูุฏ ูุงุฆู JSON **ูุทุงุจู ุญุฑูููุง** ูุฐุง ุงููุฎุทุท (ุงูููู ููุท ุชุชุบูุฑ):
${JSON.stringify(EXPLAIN_SCHEMA)}
- ุงุฌุนู ุฌููุน ุงูุญููู ุจุงูุนุฑุจูุฉ ููุท.
- ูุง ุชุณุชุฎุฏู \\mathrm ูู ุงููุต ุงูุนุงุฏู (ููุท ุฏุงุฎู ุงููุนุงุฏูุงุช).
- ุงููุฃ "formulas" ุจุตูุบ **ูุฑุชุจุทุฉ ูุจุงุดุฑุฉ** ุจุงูููููู ยซ${concept}ยป (ูุง ุตูุบ ุนุงูุฉ ุฃู ุบูุฑ ุฐุงุช ุตูุฉ).
- ูุง ุชุฐูุฑ ุตูุบุฉ ุนุงูุฉ ูุซู F=ma **ุฅูุง** ุฅุฐุง ูุงู ุงูููููู ูู "ูุงููู ูููุชู ุงูุซุงูู".
- โจ ุฃุถู ุฌููุน ุงูููุงููู ูุงููุนุงุฏูุงุช ุงูุตุญูุญุฉ ุงููุฑุชุจุทุฉ ูุจุงุดุฑุฉ ุจู ยซ${concept}ยป (ูุซูุงู ูู ุงูููููู ูู "ุงูุชุณุงุฑุน ุงูุฒุงูู" ูุงุฒู ูุธูุฑ: $\\alpha = \\tfrac{\\Delta \\omega}{\\Delta t}$ุ ูููุฐุง ูุจููุฉ ุงูููุงููู).
- ุชุฃูุฏ ุฃู ูู ุตูุบุฉ ุชุธูุฑ ูุงููุฉ ูุตุญูุญุฉ ูุจู LaTeX.`;
  temp = 0.2;
}

else if (action === "example") {
  prompt += `
ุฃุนุฏ ูุซุงููุง ุชุทุจููููุง โูุชูุณุท ุงูุตุนูุจุฉโ ุญูู ยซ${concept}ยป ููู ูุฐุง ุงููุฎุทุท:
${JSON.stringify(EXAMPLE_SCHEMA)}
ุดุฑูุท ุฅูุฒุงููุฉ:
- ูุฌุจ ุฃู ุชููู ุงููุณุฃูุฉ ูุฑุชุจุทุฉ ูุจุงุดุฑุฉ ุจู ยซ${concept}ยป ูุชุฐูุฑ ุงููููุฉ ููุณูุง ูุตููุง ุฏุงุฎู "scenario".
- ูุง ุชูุญุฑู ุฅูู ููุงููู ุฃุฎุฑู ุฎุงุฑุฌ ยซ${concept}ยป.
- ุฅู ูุงู ยซ${concept}ยป ูู "ุงูุณููุท ุงูุญุฑ" ูุงุนุชุจุฑ $g=9.8\\,\\mathrm{m/s^2}$ ูุฃูููู ููุงููุฉ ุงูููุงุก.
- ุนุฏูู ุงูุฃุฑูุงู ูุงูููู ููุทุ ูุงุญุฑุต ุนูู ุฃู ุชููู ูุญุฏุงุช givens ุฏุงุฎู \\mathrm{...}.
- steps ุนุฑุจูุฉ ุจุงููุงูู ูุชุดุฑุญ ุงูุชุนููุถ ุงูุนุฏุฏู ุฎุทูุฉ ุจุฎุทูุฉ.
- ููููุน ุงูุตูุบุฉ ุงูุนูููุฉ 1e3ุ ุงูุชุจ 1000.`;

  // ๐ ูู ููู ุตูุบุฉ ูุฎุชุงุฑุฉ ูู ุงููุณุชุฎุฏูุ ุงูุฒูู ุจูุง
  if (preferred_formula) {
    prompt += `
ููู ุฌุฏููุง:
- ุงุณุชุฎุฏูู ุงูุตูุบุฉ ุงูุชู ุงุฎุชุงุฑูุง ุงููุณุชุฎุฏู ูุฃุณุงุณ ููุญูุ ูุถุนููุง **ุฃูู ุนูุตุฑ** ูู "formulas" ูุทุจููููุง ุตุฑุงุญุฉ ูู "steps" ูุน ุงูุชุนููุถ ุงูุนุฏุฏู:
${preferred_formula}
- **ููููุน** ุฅุฏุฎุงู ุฃู ูุชุบูุฑุงุช ููุณุช ุถูู ุฑููุฒ ุงูุตูุบุฉ ุงููุฎุชุงุฑุฉ. ุฅู ุงุญุชุฌุชู ูุชุบูุฑูุง ุบูุฑ ููุฌูุฏุ ุนุฏููู ูุนุทูุงุช ุงููุณุฃูุฉ ุจุญูุซ ุชุจูู ูุงุจูุฉ ููุญู **ุจููุณ ุงูุตูุบุฉ**.
- ูุฌุจ ุฃู ุชุญุชูู "givens" ู"unknowns" ุนูู **ุฑููุฒ ูู ุงูุตูุบุฉ ุงููุฎุชุงุฑุฉ ููุท** (ูุซู \\alpha, \\omega, t ...). ูุง ุชุถููู ุฑููุฒูุง ุฃุฎุฑู.
`;
  } else {
    // ูุฅูุง ุงุทูุจู ุตูุบุฉ ููุงุณุจุฉ ูุฑุชุจุทุฉ ุจุงูููููู
    prompt += `
- ุงุฎุชุงุฑู ุตูุบุฉ ูุงุญุฏุฉ ููุงุณุจุฉ ูุฑุชุจุทุฉ ูุจุงุดุฑุฉ ุจู ยซ${concept}ยปุ ุถุนููุง ูู "formulas" ูุทุจููููุง ูู "steps".`;
  }

  temp = 0.35;
}
     else if (action === "example2") {
  prompt += `
ุฃุนุฏ ูุซุงููุง ุขุฎุฑ โุฃุตุนุจ ูููููุงโ ุญูู ยซ${concept}ยป ูุน ูุฌููู ูุฎุชูู ุนู ุงููุซุงู ุงูุฃููุ ุทุจููุง ูููุฎุทุท:
${JSON.stringify(EXAMPLE_SCHEMA)}
ุดุฑูุท ุฅูุฒุงููุฉ:
- ุบููุฑ ุงููุฌููู ูู unknowns (ูุซููุง ูู a ุฅูู m ุฃู F ุฃู t).
- ุงุฐูุฑ ยซ${concept}ยป ูุตููุง ุฏุงุฎู "scenario" ููุง ุชุฎุฑุฌ ุนูู.
- ุฅู ูุงู ยซ${concept}ยป ูู "ุงูุณููุท ุงูุญุฑ" ูุงุนุชุจุฑ $g=9.8\\,\\mathrm{m/s^2}$ ูุฃูููู ููุงููุฉ ุงูููุงุก.
- steps ุนุฑุจูุฉ ููุท ูุชุญุชูู ูุนุงุฏูุงุช ุฏุงุฎู $...$.`;

  // ูู ููู ุตูุบุฉ ูุฎุชุงุฑุฉ ูู ุงููุณุชุฎุฏูุ ุงูุฒูู ุจูุง
  if (preferred_formula) {
    prompt += `
ููู ุฌุฏููุง:
- ุงุณุชุฎุฏูู ุงูุตูุบุฉ ุงูุชู ุงุฎุชุงุฑูุง ุงููุณุชุฎุฏู ูุฃุณุงุณ ููุญูุ ูุถุนููุง **ุฃูู ุนูุตุฑ** ูู "formulas" ูุทุจููููุง ุตุฑุงุญุฉ ูู "steps" ูุน ุงูุชุนููุถ ุงูุนุฏุฏู:
${preferred_formula}
- **ููููุน** ุฅุฏุฎุงู ุฃู ูุชุบูุฑุงุช ููุณุช ุถูู ุฑููุฒ ุงูุตูุบุฉ ุงููุฎุชุงุฑุฉ. ุฅู ุงุญุชุฌุชู ูุชุบูุฑูุง ุบูุฑ ููุฌูุฏุ ุบููุฑู ูุนุทูุงุช ุงููุณุฃูุฉ ุจุญูุซ ุชุจูู ูุงุจูุฉ ููุญู **ุจููุณ ุงูุตูุบุฉ**.
- ูุฌุจ ุฃู ุชุญุชูู "givens" ู"unknowns" ุนูู **ุฑููุฒ ูู ุงูุตูุบุฉ ุงููุฎุชุงุฑุฉ ููุท** (ูุซู \\alpha, \\omega, t ...). ูุง ุชุถููู ุฑููุฒูุง ุฃุฎุฑู.
`;
  } else {
    prompt += `
- ุงุฎุชุงุฑู ุตูุบุฉ ูุงุญุฏุฉ ููุงุณุจุฉ ูุฑุชุจุทุฉ ูุจุงุดุฑุฉ ุจู ยซ${concept}ยปุ ุถุนููุง ูู "formulas" ูุทุจููููุง ูู "steps".`;
  }

  temp = 0.45;
}
else if (action === "practice") {
  prompt += `
ุฃุนูุฏ JSON ุจูุฐุง ุงูุดูู ููุท:
{ "question": "<ุณุคุงู ุนุฑุจู ุนุฏุฏู ูุงูู ููุงุถุญ ุญูู ยซ${concept}ยปุ ุจูุณุชูู ูุชูุณุทุ ูุน ูุญุฏุงุช ุญููููุฉ ุฏุงุฎู LaTeX ุนูุฏ ุงูุญุงุฌุฉ>" }
ุดุฑูุท ุฅูุฒุงููุฉ:
- ูุฌุจ ุฃู ุชุญุชูู ุตูุงุบุฉ ุงูุณุคุงู ุนูู ุงูุนุจุงุฑุฉ ยซ${concept}ยป ููุณูุง ูุตูุง.
- ูุง ุชูุฏุฑูุฌ ุฃู ููุงุชูุญ ุฃุฎุฑู ุบูุฑ "question".
- ูุง ุชุณุชุฎุฏู ุฅูุง ุงูุฑููุฒ/ุงููุชุบูุฑุงุช ุงูุชู ุชูุชูู ูุจุงุดุฑุฉ ุฅูู ยซ${concept}ยป.
- ููููุน ุฅุฏุฎุงู ูุฌุงููู ุฅุถุงููุฉ ุบูุฑ ูุฑุชุจุทุฉ ุจุงูุตูุบ ุงููุทููุจุฉ.
- ุฅู ูุงู ยซ${concept}ยป ูู "ุงูุณููุท ุงูุญุฑ" ูุงุนุชุจุฑ $g=9.8\\,\\mathrm{m/s^2}$ ูุชุฌุงูู ููุงููุฉ ุงูููุงุก.`;

// (ุงุฎุชูุงุฑู) ูู ููู preferred_formula ูุฌูู ุตูุงุบุฉ ุงูุณุคุงู ุจุญูุซ ูููู ุญูู ุจูุฐู ุงูุตูุบุฉ:
  if (preferred_formula) {
    prompt += `
- ุตูุบ ุงูุณุคุงู ุจุญูุซ ูููู ูุงุจูุงู ููุญู ูุจุงุดุฑุฉ ุจุงุณุชุฎุฏุงู ุงูุตูุบุฉ ุงููุฎุชุงุฑุฉ ุงูุชุงููุฉ (ููู ูุง ุชุฐูุฑ ุงูุตูุบุฉ ุตุฑุงุญุฉ ูููุณุชุฎุฏู):
${preferred_formula}
- ูุฌุจ ุฃู ุชูุตุงุบ ุงููุนุทูุงุช ุจุญูุซ ุชุณูุญ ุจุญู ุงูุณุคุงู ุจูุฐู ุงูุตูุบุฉ ููุทุ ุฏูู ุงูุญุงุฌุฉ ุฅูู ููุงููู ุฅุถุงููุฉ.`;
  }

  temp = 0.55;
} else if (action === "solve") {
  // ูููุฒู ุงููููุฐุฌ ุจููุณ ูุฎุทุท ุงููุซุงู ูุถูุงู ุชุนุจุฆุฉ ุงูุฌุฏูู
  prompt += `
ุญู ุงููุณุฃูุฉ ุงูุชุงููุฉ ูุฃุนุฏ JSON **ุจููุณ ูุฎุทุท ุงููุซุงู ุชูุงููุง**:
ุงูุณุคุงู: ${question}

ูุฌุจ ุฃู ูููู ุงููุงุชุฌ ุจุงููุงุฆู ุงูุชุงูู (ุบููุฑ ุงูููู ููุท):
${JSON.stringify(EXAMPLE_SCHEMA)}

ุงูุชุนูููุงุช ุงูุฅูุฒุงููุฉ:
- ุงููุฃ givens ู unknowns ุจุฏูุฉ (symbol ูุตูุฑ ูุซู m, a, F) ู unit ุฏุงุฎู \\mathrm ููุท.
- steps ุนุฑุจูุฉ ููุตูุฉุ ุฃู ูุนุงุฏูุฉ ุฏุงุฎู $...$ ุฃู $$...$$ุ ูุง ุชูุชุจ \\mathrm ูู ุงููุต ุงูุนุงุฏู.
- ุถุน ุงููุชูุฌุฉ ุงูููุงุฆูุฉ ูู "result" ุจุตูุบุฉ LaTeX ูุน ูุญุฏุฉ ุตุญูุญุฉ.`;

// ูู ุงููุณุชุฎุฏู ุงุฎุชุงุฑ ุตูุบุฉุ ุงุณุชุฎุฏููุง ุญุตุฑููุง
  if (preferred_formula) {
    prompt += `
ููู ุฌุฏููุง:
- ุงุณุชุฎุฏู ุงูุตูุบุฉ ุงููุฎุชุงุฑุฉ ุฃุฏูุงู ูู ุงูุญูุ ูุงุฌุนููุง **ุฃูู ุนูุตุฑ** ูู "formulas"ุ ูุทุจูููุง ุตุฑุงุญุฉ ุฏุงุฎู "steps" ูุน ุงูุชุนููุถ ุงูุนุฏุฏู:
${preferred_formula}
- **ููููุน** ุงุณุชุฎุฏุงู ุฃู ุฑููุฒ ุฃู ูุชุบูุฑุงุช ููุณุช ุถูู ุงูุตูุบุฉ ุงููุฎุชุงุฑุฉ. 
- ุนุฏูู ุงูููู ูุงูุฃุฑูุงู ููุท ุจุญูุซ ุชุจูู ุงููุณุฃูุฉ ูุงุจูุฉ ููุญู **ุจููุณ ุงูุตูุบุฉ**. 
- ูุฌุจ ุฃู ุชุญุชูู "givens" ู"unknowns" ุนูู **ุฑููุฒ ูู ุงูุตูุบุฉ ุงููุฎุชุงุฑุฉ ููุท**.`;
  } else {
    prompt += `
- ุงุฎุชุฑ ุตูุบุฉ ูุงุญุฏุฉ ููุงุณุจุฉ ูุฑุชุจุทุฉ ูุจุงุดุฑุฉ ุจู ยซ${concept}ยปุ ูุถุนูุง ูู "formulas" ูุทุจูููุง ูู "steps".`;
  }

  temp = 0.25;
} else {
    // ุงูุชุฑุงุถู: ุนุงูููู ูุดุฑุญ
    prompt += `
(ูุถุน ุงูุชุฑุงุถู explain)
${JSON.stringify(EXPLAIN_SCHEMA)}`;
    temp = 0.25;
  }

  const payload = {
    contents: [{ role: "user", parts: [{ text: prompt }]}],
    generationConfig: {
      temperature: temp,
      maxOutputTokens: 900,
      response_mime_type: "application/json"
    }
  };

  return { url: baseUrl, payload };
}
